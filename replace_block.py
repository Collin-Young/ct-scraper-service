from pathlib import Path
path = Path('ct_scraper/scrape_cases.py')
text = path.read_text()
old_block = "next_link = driver.find_elements(\n                    By.XPATH,\n                    f\"//a[@href=\\\"javascript:__doPostBack('ctl00$ContentPlaceHolder1$gvPropertyResults','Page${page + 1}')\\\"]\",\n                )\n                if next_link:\n                    marker = links[0] if links else driver.find_element(By.TAG_NAME, \"body\")\n                    next_link[0].click()\n                    try:\n                        wait.until(EC.staleness_of(marker))\n                    except Exception:\n                        pause(0.6, 1.0)\n                    page += 1\n                else:\n"
new_block = "next_page_num = page + 1\n                next_link = driver.find_elements(\n                    By.XPATH,\n                    f\"//a[@href=\\\"javascript:__doPostBack('ctl00$ContentPlaceHolder1$gvPropertyResults','Page${next_page_num}')\\\"]\",\n                )\n                if next_link:\n                    marker = links[0] if links else driver.find_element(By.TAG_NAME, \"body\")\n                    next_link[0].click()\n                    try:\n                        wait.until(EC.presence_of_element_located((\n                            By.XPATH,\n                            f\"//table[@id='ctl00_ContentPlaceHolder1_gvPropertyResults']//span[text()='${next_page_num}']\"\n                        )))\n                    except Exception:\n                        pass\n                    try:\n                        wait.until(EC.staleness_of(marker))\n                    except Exception:\n                        pause(0.6, 1.0)\n                    page = next_page_num\n                else:\n"
if old_block not in text:
    raise SystemExit('old block not found for replacement')
path.write_text(text.replace(old_block, new_block))
